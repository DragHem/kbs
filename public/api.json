{
    "swagger": "2.0",
    "info": {
        "description": "Mega Giga Projekt API reference (for internal use)",
        "version": "0.0.1",
        "title": "Mega Giga Projekt",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "januszgajda0@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "192.168.0.125:8000",
    "basePath": "/api",
    "tags": [
        {
            "name":  "user",
            "description": "User operations"
        },
        {
            "name": "posts",
            "description": "Posts operations"
        }

    ],
    "schemes": [
        "http"
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Login user",
                "description": "Provide email and password to receive bearer token",
                "operationId": "login",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "email"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "password"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "login successful",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string",
                                    "description": "Bearer token used to authenticate user"
                                },
                                "user": {
                                    "$ref": "#/definitions/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Wrong login data provided"
                    }
                }
            }

        },
        "/register": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Register new user",
                "description": "Provide information to register new user",
                "operationId": "register",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "description": "Username (nick) of new user"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "description": "Full name of new user"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "email"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "password"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Register successful",
                        "schema": {
                            "type": "string",
                            "example": "User registered successfully"
                        }
                    },
                    "400": {
                        "description": "Validation errors",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Error message",
                                "example": "Email address already exists"
                            }
                        }
                    }
                }
            }
        },
        "/posts": {
            "get": {
                "tags": [
                    "posts"
                ],
                "summary": "Get all posts",
                "operationId": "getPosts",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Return all posts sorted by creation time",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Post"
                            }
                        }
                    }
                }
            }
        },
        "/posts/user/{userId}": {
            "get": {
                "tags": [
                    "posts"
                ],
                "summary": "Get all posts by user",
                "operationId": "getPostsByUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return all posts created by user sorted by creation time",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Post"
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/posts/add": {
            "put": {
                "tags": [
                    "posts"
                ],
                "summary": "Add new post",
                "operationId": "addPost",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "description": "Text of post",
                        "required": true,
                        "type": "string",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post created successfully",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Post"
                        }
                    },
                    "400": {
                        "description": "Validation errors",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "description": "Error message",
                                "example": "Body filed is empty"
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization failed",
                        "schema": {
                            "$ref": "#/definitions/AuthFailed"
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        }
    },
    "securityDefinitions": {
        "bearer_token": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "username": {
                    "type": "string",
                    "example": "unuel"
                },
                "name": {
                    "type": "string",
                    "example": "Janusz Gajda"
                },
                "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                },
                "description": {
                    "type": "string",
                    "example": "Hello everyone! Welcome to my profile"
                },
                "avatar_url": {
                    "type": "string",
                    "format": "uri"
                },
                "email_verified_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-07-14T12:00:00.000000Z"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-07-14T12:00:00.000000Z"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-07-14T12:00:00.000000Z"
                }
            }
        },
        "Post": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "body": {
                    "type": "string",
                    "example": "Lorem ipsum...",
                    "description": "Text of the post"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-07-14T12:00:00.000000Z"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-07-14T12:00:00.000000Z"
                },
                "user": {
                    "$ref": "#/definitions/User"
                }
            }
        },
        "AuthFailed": {
            "type": "string",
            "example": "Authentication error"
        }
    }
}
